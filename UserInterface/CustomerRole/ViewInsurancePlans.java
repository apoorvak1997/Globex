/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.EcoSystem;
import Business.Enterprise;
import Business.InsuraceAdmin.InsuranceAdminDirectory;
import Business.InsuraceAdmin.InsurancePlan;
import Business.InsuraceAdmin.InsuranceeAdmin;
import Business.Organization;

import Business.UserAccount.UserAccount;
import Business.WorkQueue.BuyInsuranceWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Apoorva
 */
public class ViewInsurancePlans extends javax.swing.JPanel {

    /**
     * Creates new form ViewInsurancePlans
     */
    JPanel userProcessContainer;
    EcoSystem system;
    UserAccount userAccount;
    InsuranceAdminDirectory id;
    InsuranceeAdmin ic;
    String name;
    public ViewInsurancePlans(JPanel userProcessContainer,UserAccount userAccount,EcoSystem system) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.userAccount=userAccount;
        this.system=system;
//        id= system.findNetwork(userAccount.getEmployee().getCity()).getEnterpriseDirectory().findEnterprise();
        insuranceCompanyJComboBox.removeAllItems();
//        populateInsuranceJComboBox(id);
        populateLogComboBox();
        jButton2.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        insuranceCompanyJComboBox = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        plansJTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        nameTxtField = new javax.swing.JTextField();
        yrsTxtField = new javax.swing.JTextField();
        monthlTxtField = new javax.swing.JTextField();
        totalTxtField = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("SELECT COMPANY: ");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, -1, -1));

        insuranceCompanyJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        insuranceCompanyJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insuranceCompanyJComboBoxActionPerformed(evt);
            }
        });
        add(insuranceCompanyJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 90, 130, -1));

        jButton2.setBackground(new java.awt.Color(24, 31, 46));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Pay");
        jButton2.setPreferredSize(new java.awt.Dimension(156, 43));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 550, -1, -1));

        plansJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Insurance Plan Name", "Total years", "Monthly premium amount", "Total amount"
            }
        ));
        plansJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                plansJTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(plansJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 180, 630, 150));

        jLabel3.setText("Plan Name:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 400, -1, -1));

        jLabel4.setText("Total years of duration:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 430, 160, -1));

        jLabel5.setText("Monthly premium amount:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 470, -1, -1));

        jLabel6.setText("Total premium amount:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 510, -1, -1));

        nameTxtField.setPreferredSize(new java.awt.Dimension(164, 30));
        nameTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTxtFieldActionPerformed(evt);
            }
        });
        add(nameTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 390, 160, -1));

        yrsTxtField.setPreferredSize(new java.awt.Dimension(164, 30));
        yrsTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yrsTxtFieldActionPerformed(evt);
            }
        });
        add(yrsTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 430, 160, -1));

        monthlTxtField.setPreferredSize(new java.awt.Dimension(164, 30));
        monthlTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthlTxtFieldActionPerformed(evt);
            }
        });
        add(monthlTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 470, 160, -1));

        totalTxtField.setPreferredSize(new java.awt.Dimension(164, 30));
        totalTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalTxtFieldActionPerformed(evt);
            }
        });
        add(totalTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 500, 160, -1));

        jButton3.setBackground(new java.awt.Color(24, 31, 46));
        jButton3.setText("VIEW PLANS");
        jButton3.setPreferredSize(new java.awt.Dimension(156, 43));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-350, 100, -1, -1));

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("INSURANCE COMPANIES AND PLANS");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 20, 400, 30));

        jButton6.setBackground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Back");
        jButton6.setPreferredSize(new java.awt.Dimension(80, 30));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));

        jLabel9.setIcon(new javax.swing.ImageIcon("/Users/shreyascr/Desktop/AED final/AED_final_project/icons/Humaaans - 1 Character copy 2.png")); // NOI18N
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 350, -1, -1));

        jButton4.setBackground(new java.awt.Color(24, 31, 46));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Check Plans");
        jButton4.setPreferredSize(new java.awt.Dimension(156, 43));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void plansJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_plansJTableMouseClicked
        // TODO add your handling code here:

        DefaultTableModel dtm = (DefaultTableModel) plansJTable.getModel();

        String name = dtm.getValueAt(plansJTable.getSelectedRow(), 0).toString();
        int years = Integer.parseInt(dtm.getValueAt(plansJTable.getSelectedRow(), 1).toString());
        Double monthlyPremiumAmount = Double.parseDouble(dtm.getValueAt(plansJTable.getSelectedRow(), 2).toString());
        Double totalAmount = Double.parseDouble(dtm.getValueAt(plansJTable.getSelectedRow(), 3).toString());

        nameTxtField.setText(name);
        yrsTxtField.setText(String.valueOf(years));
        monthlTxtField.setText(String.valueOf(monthlyPremiumAmount));
        totalTxtField.setText(String.valueOf(totalAmount));
         jButton2.setVisible(true);
    }//GEN-LAST:event_plansJTableMouseClicked

    private void nameTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTxtFieldActionPerformed

    private void yrsTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yrsTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yrsTxtFieldActionPerformed

    private void monthlTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthlTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_monthlTxtFieldActionPerformed

    private void totalTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalTxtFieldActionPerformed

    private void insuranceCompanyJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insuranceCompanyJComboBoxActionPerformed
        // TODO add your handling code here:
        
        int selectedValue = insuranceCompanyJComboBox.getSelectedIndex();
         name = insuranceCompanyJComboBox.getItemAt(selectedValue);
//        populatePlans(name);
        
    }//GEN-LAST:event_insuranceCompanyJComboBoxActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        ic = system.findNetwork(userAccount.getEmployee().getCity()).getEnterpriseDirectory().findEnterprise(name).getOrganizationDirectory().getInsuranceAdminDirectory().findInsuranceAdmin(name);        
        int rowCount = plansJTable.getRowCount();
        for (int i = 0; i < rowCount; i++) {
        InsurancePlan ip = (InsurancePlan) plansJTable.getValueAt(i, 0);
        ic.getInsurancePlanDirectory().addPlan(ip);
        }
//        System.out.println(lab.getTestlist().getTestList());
        Boolean flag = true;
        if (ic.getInsurancePlanDirectory().getIpDirectory().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Error: There are no tests chosen!");
            flag = false;
        } else {
            
            BuyInsuranceWorkRequest buyInsuranceRequest = new BuyInsuranceWorkRequest();
//            buyInsuranceRequest.set(lab.getTestlist().getTestList());
//            System.out.println(this.userAccount.getEmployee().getName());
            InsurancePlan ip = (InsurancePlan) plansJTable.getValueAt(0, 0);
            buyInsuranceRequest.setSender(this.userAccount);
            buyInsuranceRequest.setPlan(ip);
//            System.out.println("getting sender uname "+bookNewTestWorkRequest.getSender().getUsername());
           // buyInsuranceRequest.getSender().setUsername(this.userAccount.getUsername());
//            Lab l= (Lab) LabTable.getValueAt(0, 0);
            int selectedValue = insuranceCompanyJComboBox.getSelectedIndex();
            
            InsuranceeAdmin  icc = system.findNetwork(userAccount.getEmployee().getCity()).getEnterpriseDirectory().findEnterprise(name).getOrganizationDirectory().getInsuranceAdminDirectory().getInsuranceList().get(selectedValue);
//            Lab lab2 = labDirectory.findLab(l1.getUsername());
            
            buyInsuranceRequest.setReceiver(system.getUserAccountDirectory().findUserAccount(icc.getName()));
//            System.out.println(" YO " +l1.getUsername());
//            buyInsuranceRequest.getReceiver().);
//            bookNewTestWorkRequest.setRec(l);
//            bookNewTestWorkRequest.setTestId(1);
//            System.out.println("OOOOOOO" + l1.g);
//            System.out.println("ppppppp" + user);
//            System.out.println("Lab is " + l1.getUsername());
//            buyInsuranceRequest.getReceiver().setUsername(l1.getUsername());
//            System.out.println("getting receiver uname "+bookNewTestWorkRequest.getRec().getUsername());
//            System.out.println("receiver is aaa " +l1.getUsername());
//            SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy", Locale.getDefault());
//            String d = sdf.format(jDateChooser1.getDate());
//            buyInsuranceRequest.setRequestDate();
            buyInsuranceRequest.setRequestDate(new Date());
            buyInsuranceRequest.setStatus("Insurance ordered");
            system.getWorkQueue().addWorkRequest(buyInsuranceRequest);
            
        }
//            if (customer != null) {
//                System.out.println(customer.getName());
//                placeNewOrderWorkRequest.setSender(customer);
//            } else {
//                System.out.println("Customer is null");
//            }
//            int selectedValue = RestaurantJComboBox.getSelectedIndex();
//            Restaurant restaurant = rd.getRestaurantList().get(selectedValue);
//            if (restaurant != null) {
//                System.out.println(restaurant.getName());
//                placeNewOrderWorkRequest.setReceiver(restaurant);
//            } else {
//                System.out.println("Restaurant is null");
//            }
//            placeNewOrderWorkRequest.setRequestDate(new Date());
//            placeNewOrderWorkRequest.setStatus("Ordered");
//            ecosystem.getWorkQueue().addWorkRequest(placeNewOrderWorkRequest);
//        }
       if (flag) {
            JOptionPane.showMessageDialog(null, "Insurance ordered successfully! Thank you for your payment");
            System.out.println(userAccount.getWorkQueue().getWorkRequestList());
//            System.out.println("prev");
            List<WorkRequest> r = this.userAccount.getWorkQueue().getWorkRequestList();
            
            ViewCurrentPlans view = new ViewCurrentPlans(userProcessContainer, userAccount, system);
            userProcessContainer.add("ViewPlans", view);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
     
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        //
        //        Component[] comps = this.userProcessContainer.getComponents();
        //        for(Component comp : comps){
            //            if(comp instanceof SystemAdminWorkAreaJPanel){
                //                SystemAdminWorkAreaJPanel systemAdminWorkAreaJPanel= (SystemAdminWorkAreaJPanel) comp;
                //                systemAdminWorkAreaJPanel.populateTree();
                //            }
            //        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
           populateTable();
    }//GEN-LAST:event_jButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JComboBox<String> insuranceCompanyJComboBox;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField monthlTxtField;
    private javax.swing.JTextField nameTxtField;
    private javax.swing.JTable plansJTable;
    private javax.swing.JTextField totalTxtField;
    private javax.swing.JTextField yrsTxtField;
    // End of variables declaration//GEN-END:variables

//    private void populateInsuranceJComboBox(InsuranceDirectory id) {
//         //To change body of generated methods, choose Tools | Templates.
//        for (InsuranceCompany ic : id.getInsuranceList()) {
//            insuranceCompanyJComboBox.addItem(ic.getName());
//    }
//    }

    private void populateTable() {
         //To change body of generated methods, choose Tools | Templates.
        DefaultTableModel dtm = (DefaultTableModel) plansJTable.getModel();
        dtm.setRowCount(0);
        int selectedValue = insuranceCompanyJComboBox.getSelectedIndex();
        String Admin = insuranceCompanyJComboBox.getItemAt(selectedValue);
        System.out.println("name"+name);
        System.out.println("insur"+Admin);
        InsuranceeAdmin ic = system.findNetwork(userAccount.getEmployee().getCity()).getEnterpriseDirectory().findEnterprise(name).getOrganizationDirectory().getInsuranceAdminDirectory().findInsuranceAdmin(Admin);
//        System.out.println("Lab in table is "+lab.getName());

        for (InsurancePlan p : ic.getInsurancePlanDirectory().getIpDirectory()) {
            {
                Object[] row = new Object[4];
                row[0] = p;
                row[1] = p.getTotalYears();
                row[2] = p.getMonthlyPremium();
                row[3] = p.getTotalPremium();
                dtm.addRow(row);
            }
    }
    }

//    private void populatePlans(String name) {
//            for (InsuranceeAdmin ic : system.findNetwork(userAccount.getEmployee().getCity()).getEnterpriseDirectory().findEnterprise(name).getOrganizationDirectory().getInsuranceAdminDirectory().getInsuranceList()) {
//            if (ic.getName().equals(name)) {
//                InsuranceeAdmin ic1 = ic;
//                for (InsurancePlan ip :ic1.getInsurancePlanDirectory().getIpDirectory() ) {
//                    insuranceCompanyJComboBox.addItem(ip.getName());
//                }
//                break;
//            }
//        }
//    }
     private void populateLogComboBox() {
      for(Enterprise res: system.findNetwork(userAccount.getEmployee().getCity()).getEnterpriseDirectory().getEnterpriseList()){
             if(res.getEnterpriseType().getValue().equals("Insurance")){
                            insuranceCompanyJComboBox.addItem(res.getName());
         
        }else{
                 System.out.println("No Companies");
             }
        }
    }
}
