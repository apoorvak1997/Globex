/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PharamacyAdmin;

import Business.DB4OUtil.DB4OUtil;
import Business.DeliveryMan.DeliveryMan;
import Business.DeliveryMan.DeliveryManDirectory;
import Business.EcoSystem;
import Business.Enterprise;
import Business.Patient.Patient;
import Business.Pharmacist.PharamacyAdmin;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PharmacyOrder;
import Business.WorkQueue.PlaceNewOrderWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tharoon
 */

public class manageOrderJpanel extends javax.swing.JPanel {

    /**
     * Creates new form manageOrderJpanel
     */
    private JPanel userProcessContainer;
    private UserAccount user;
    private EcoSystem system;
     private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    Patient pat;
    DefaultTableModel dtm;
    ArrayList<Patient> array1;
    List<PharmacyOrder> orderItemList = new ArrayList<PharmacyOrder>();
    WorkRequest workrequest;
    private PharamacyAdmin pharObj;
    PlaceNewOrderWorkRequest placeWorkRequest;
    String patname;
    String pharName;
    DeliveryManDirectory delDir;
    String selectedPharmacy;

    
    public manageOrderJpanel(JPanel userProcessContainer,EcoSystem system,UserAccount user,String pharmacy,String patient) {
        this.userProcessContainer=userProcessContainer;
        this.system=system;
        //this.placeWorkRequest= placeNewOrderWorkRequest;
        this.pharName = pharmacy;
        this.patname = patient;
        this.user = user;
        initComponents();
        //System.out.println("check "+systeuser.getEmployee().getCity()));
       //populateFields();
       populatetable();
        populateComboBox();
        System.out.println("Work request"+system.getWorkQueue().getWorkRequestList());
        
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
//        private void populateRequestTable() {
//        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
//
//        model.setRowCount(0);
////        System.out.println("R is");
//        for (WorkRequest request : system.getWorkQueue().getWorkRequestList()) {
////       System.out.println("Receiver would be");
////System.out.println(request.getReceiver());
////System.out.println("Restaurant would be "+restaurant.getName()) ;
//            if (request.getReceiver().getUsername().equals(pharObj.getPharname())) {
//                Object[] row = new Object[4];
//                row[0] = request;
//                row[1] = request.getReceiver();
//                row[2] = request.getStatus();
//                row[3] = request.getRequestDate();
//
//                model.addRow(row);
//            }

       // }
    
   // }
//        private void populateFields() {
//            
//            for(WorkRequest request : system.getWorkQueue().getWorkRequestList()){
//                placeWorkRequest = (PlaceNewOrderWorkRequest) request;
//        System.out.println("Here it is" + placeWorkRequest.getOrderTotal());
//        for (PharmacyOrder orderItemTotal : placeWorkRequest.getOrderTotal()) {
//            itmNameTxt.setText(orderItemTotal.getCatalog().getItemName());
//            //QuantityJTxtField.setText(String.valueOf(orderItemTotal.getQuantity()));
//            itmPriceTxt.setText(String.valueOf(orderItemTotal.getCatalog().getItemPrice()));
//            custNameTxt.setText(placeWorkRequest.getSender().getUsername());
//            stsTxt.setText(placeWorkRequest.getStatus());
//        }
//            }
//    }
        
    public void populateComboBox(){
         for(Enterprise res: system.findNetwork(user.getEmployee().getCity()).getEnterpriseDirectory().getEnterpriseList()){
             if(res.getEnterpriseType().getValue().equals("Delivery")){
            delManCombo.addItem(res.getName());
         
        }else{
                 System.out.println("nothing");
             }
         }
    }
    private void populatetable(){
        DefaultTableModel dtm = (DefaultTableModel) orderTbl.getModel();
        dtm.setRowCount(0);
        for(WorkRequest request : system.getWorkQueue().getWorkRequestList()){
            if(request instanceof PlaceNewOrderWorkRequest){
        placeWorkRequest = (PlaceNewOrderWorkRequest) request;
        for (PharmacyOrder orderItemTotal : placeWorkRequest.getOrderTotal()){
                Object row[] = new Object[4];
                row[0] = request;
                row[1] = orderItemTotal.getCatalog().getItemName();
                row[2] = orderItemTotal.getCatalog().getItemPrice();
                row[3] = request.getStatus();

                dtm.addRow(row);
        }      
        }
        }
    }
    

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        acceptOrder = new javax.swing.JButton();
        declineOrder = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        delManCombo = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderTbl = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        acceptOrder.setBackground(new java.awt.Color(24, 31, 46));
        acceptOrder.setForeground(new java.awt.Color(255, 255, 255));
        acceptOrder.setText("Accept");
        acceptOrder.setPreferredSize(new java.awt.Dimension(156, 43));
        acceptOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptOrderActionPerformed(evt);
            }
        });
        add(acceptOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 270, -1, -1));

        declineOrder.setBackground(new java.awt.Color(24, 31, 46));
        declineOrder.setForeground(new java.awt.Color(255, 255, 255));
        declineOrder.setText("Decline");
        declineOrder.setPreferredSize(new java.awt.Dimension(156, 43));
        declineOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                declineOrderActionPerformed(evt);
            }
        });
        add(declineOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 270, -1, -1));

        jLabel6.setText("Assign DeliveryMan:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 360, -1, -1));

        delManCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        delManCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delManComboActionPerformed(evt);
            }
        });
        add(delManCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 360, 150, -1));

        jButton1.setBackground(new java.awt.Color(24, 31, 46));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Assign");
        jButton1.setPreferredSize(new java.awt.Dimension(156, 43));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 410, -1, -1));

        orderTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Customer Name", "Item Name", "Price", "Status"
            }
        ));
        jScrollPane1.setViewportView(orderTbl);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 110, 500, 104));

        jButton6.setBackground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Back");
        jButton6.setPreferredSize(new java.awt.Dimension(80, 30));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("Manage Orders");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, 260, 30));

        jLabel7.setIcon(new javax.swing.ImageIcon("/Users/shreyascr/Desktop/AED final/AED_final_project/icons/Humaaans - Standing copy 10.png")); // NOI18N
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 410, 380));
    }// </editor-fold>//GEN-END:initComponents

    private void acceptOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptOrderActionPerformed
        // TODO add your handling code here:
                int selectedRow = orderTbl.getSelectedRow();
               // System.out.println("Status "+orderTbl.getValueAt(selectedRow, 3)); 
       if (selectedRow <0) {
            JOptionPane.showMessageDialog(null, "You must select a row first!");
        } else {
            if (orderTbl.getValueAt(selectedRow, 3).equals("Completed")) {
                JOptionPane.showMessageDialog(null, "Order is already completed!");
            } else {
                WorkRequest request = (WorkRequest) orderTbl.getValueAt(selectedRow, 0);
                request.setStatus("Accepted");
                populatetable();
            }

        }
   dB4OUtil.storeSystem(system);  
        //stsTxt.setText(placeWorkRequest.getStatus());
    }//GEN-LAST:event_acceptOrderActionPerformed

    private void declineOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_declineOrderActionPerformed
        // TODO add your handling code here:
                int selectedRow = orderTbl.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "You must select a row first!");
        }

        WorkRequest request = (WorkRequest) orderTbl.getValueAt(selectedRow, 0);
        if (orderTbl.getValueAt(selectedRow, 1).equals("Completed")) {
            JOptionPane.showMessageDialog(null, "Order is already processed and completed!");
        } else {
               
                request.setStatus("Declined");
                populatetable();
        }

           dB4OUtil.storeSystem(system);  
        //stsTxt.setText(placeWorkRequest.getStatus());
    }//GEN-LAST:event_declineOrderActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
//        System.out.println("Selected del++"+selectedPharmacy+"++");
//        System.out.println("Testing "+system.findNetwork(user.getEmployee().getCity()).getEnterpriseDirectory().findEnterprise(selectedPharmacy).getOrganizationDirectory().getDeliveryManDirectory().getDeliveryList().get(0).getDeliveryManName());
//         System.out.println("Testing111 "+system.findNetwork(user.getEmployee().getCity()).getEnterpriseDirectory().findEnterprise(selectedPharmacy).getOrganizationDirectory().getDeliveryManDirectory().getDeliveryList().size());
                int selectedValue = delManCombo.getSelectedIndex();
        if (selectedValue >= 0) {
            DeliveryMan deliveryMan = system.findNetwork(user.getEmployee().getCity()).getEnterpriseDirectory().findEnterprise(selectedPharmacy).getOrganizationDirectory().getDeliveryManDirectory().findDeliveryMan(selectedPharmacy);
           placeWorkRequest.setDeliveryMan(system.getUserAccountDirectory().findUserAccount(deliveryMan.getDeliveryManName()));
           System.out.println(placeWorkRequest.getDeliveryMan());
           placeWorkRequest.setStatus("Assigned");
           System.out.println("assignment");
            System.out.println(placeWorkRequest.getDeliveryMan().getUsername());
            JOptionPane.showMessageDialog(null, "Delivery man has been assigned");
            
        }
        populatetable();
   dB4OUtil.storeSystem(system);  
    }//GEN-LAST:event_jButton1ActionPerformed

    private void delManComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delManComboActionPerformed
        // TODO add your handling code here:
        selectedPharmacy = String.valueOf(delManCombo.getSelectedItem());
        
    }//GEN-LAST:event_delManComboActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        //
        //        Component[] comps = this.userProcessContainer.getComponents();
        //        for(Component comp : comps){
            //            if(comp instanceof SystemAdminWorkAreaJPanel){
                //                SystemAdminWorkAreaJPanel systemAdminWorkAreaJPanel= (SystemAdminWorkAreaJPanel) comp;
                //                systemAdminWorkAreaJPanel.populateTree();
                //            }
            //        }
    }//GEN-LAST:event_jButton6ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptOrder;
    private javax.swing.JButton declineOrder;
    private javax.swing.JComboBox<String> delManCombo;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable orderTbl;
    // End of variables declaration//GEN-END:variables
}
